{
  "folders": [
    {
      "path": "."
    }
  ],
  "settings": {
    // Editor settings
    "editor.formatOnSave": true,
    "editor.tabSize": 2,
    "editor.rulers": [100],
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    },
    
    // PostgreSQL settings
    "postgres.connections": [
      {
        "name": "SalesBlanket DB",
        "host": "your-rds-endpoint.amazonaws.com",
        "port": 5432,
        "database": "postgres",
        "user": "postgres",
        "password": "PorscheGoFast911",
        "enabled": true,
        "connectTimeout": 15000
      }
    ],
    "postgres.defaultConnection": "SalesBlanket DB",
    "postgres.prettyPrintJSONfields": true,
    "postgres.defaultLimit": 100,
    "postgres.formatSql": true,
    "postgres.showTriggerFunctions": true,
    
    // SQL files
    "files.associations": {
      "*.sql": "postgres"
    },
    "sql.linter.run": "onSave",
    
    // JavaScript/TypeScript settings
    "javascript.updateImportsOnFileMove.enabled": "always",
    "typescript.updateImportsOnFileMove.enabled": "always",
    "typescript.preferences.importModuleSpecifier": "relative",
    "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    
    // GraphQL
    "graphql.validation.maxNumberOfProblems": 100,
    "graphql.useSchemaFileDefinitions": true,
    
    // Terminal
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    
    // PostGIS-specific settings
    "postgres.showGeometryViewer": true,
    "postgres.geometryColumnTypes": ["geometry", "geography"]
  },
  "extensions": {
    "recommendations": [
      // PostgreSQL
      "ms-ossdata.vscode-postgresql",
      "ckolkman.vscode-postgres",
      
      // JavaScript/TypeScript
      "dbaeumer.vscode-eslint",
      "esbenp.prettier-vscode",
      "ms-vscode.vscode-typescript-next",
      
      // GraphQL
      "graphql.vscode-graphql",
      "graphql.vscode-graphql-syntax",
      
      // Apollo
      "apollographql.vscode-apollo",
      
      // Git
      "eamodio.gitlens",
      
      // Utils
      "streetsidesoftware.code-spell-checker",
      "usernamehw.errorlens"
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "type": "node",
        "request": "launch",
        "name": "Launch Server",
        "skipFiles": ["<node_internals>/**"],
        "program": "${workspaceFolder}/server/index.ts",
        "outFiles": ["${workspaceFolder}/dist/**/*.js"],
        "resolveSourceMapLocations": [
          "${workspaceFolder}/**",
          "!**/node_modules/**"
        ],
        "preLaunchTask": "npm: build",
        "console": "integratedTerminal"
      }
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Connect to PostgreSQL",
        "type": "shell",
        "command": "${command:postgresql.connect}",
        "problemMatcher": [],
        "runOptions": {
          "runOn": "folderOpen"
        }
      },
      {
        "label": "npm: build",
        "type": "npm",
        "script": "build",
        "group": {
          "kind": "build",
          "isDefault": true
        }
      },
      {
        "label": "Initialize Database",
        "type": "shell",
        "command": "psql -h ${config:postgres.connections[0].host} -U ${config:postgres.connections[0].user} -d ${config:postgres.connections[0].database} -f ${workspaceFolder}/server/db/migrations/001_initial_schema.sql -f ${workspaceFolder}/server/db/migrations/002_seed_data.sql",
        "problemMatcher": []
      }
    ]
  }
}